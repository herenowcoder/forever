#!/bin/bash
#
# (c) 2014 Wojciech Kaczmarek. All rights reserved.
# Released under the BSD 2-clause license - see this for details:
# http://github.com/herenowcoder/forever/blob/master/LICENSE

# see http://superuser.com/a/781762/20912

err() { 
    echo "$1" >&2; exit 1 
}

blue() {
    echo $'\e[34m'${1}$'\e[0m' >&2
}

log() {
    blue "[forever $1 `date +%H:%M:%S`]"
}

stepfile="./forever.step"
[ -x "$stepfile" ] || err "$stepfile should be present"

export TIMEFORMAT='%2U user %2S system %P%% cpu %R total'

case `uname` in
Linux)
    while true; do
        time $stepfile
        $stepfile files | xargs inotifywait -q -e modify
        [ $? -eq 130 ] && exit 130
        log awakened
    done
    ;;
Darwin)
    time $stepfile
    $stepfile files | xargs fswatch -k -x | while read x; do
        if [ `echo $x | grep -cE Attribute` -eq 0 ]; then
            log awakened
            time $stepfile
        fi
    done
    ;;
FreeBSD)
    err <<EOT
If you want to have it on FreeBSD, please give me (the author) an access
to some FreeBSD box as I don't have one anymore. I can be contacted via Github
issues.
EOT
    ;;
esac
